// Uses AMD or browser globals to create a jQuery plugin.
// It does not try to register in a CommonJS environment since
// jQuery is not likely to run in those environments.
// See jqueryPluginCommonJs.js for that version.
/**
 * Input Grid - jQuery Plugin
 *
 * Version: 0.3.2 (5/25/2012)
 * Requires: jQuery v1.7+
 *
 * Copyright (c) 2011 Adam Draper - http://github.com/adamwdraper
 * Under MIT and GPL licenses:
 *  http://www.opensource.org/licenses/mit-license.php
 *  http://www.gnu.org/licenses/gpl.html
 */(function(e){typeof define=="function"&&define.amd?define(["jQuery"],e):e(jQuery)})(function(e){var t,n=e('<div class="beacon"></div>'),r={},i={init:function(t){return this.each(function(){var i=e(this),s=i.offset(),o=i.data("initialized");if(!o){i=e(this);i.data("initialized",!0);i.append(n);i.css({position:"relative"});n.css({position:"absolute"});r={width:i.width(),height:i.height(),left:s.left,top:s.top,x:{value:t.x.value||t.x.min||0,min:t.x.min||0,max:t.x.max||20},y:{value:t.y.value||t.y.min||0,min:t.y.min||0,max:t.y.max||20},beacon:{width:n.width(),height:n.height(),position:function(){n.css({bottom:r.y.col*r.y.base+r.y.base/2-this.height/2,left:r.x.row*r.x.base+r.x.base/2-this.width/2})}},setCoordsFromOffset:function(e,t){var n=this.x.value,r=this.y.value,s=Math.floor((e-this.left)/this.x.base),o=this.y.max-this.y.min-Math.floor((t-this.top)/this.y.base);if(s>=0&&s<this.rows){this.x.row=Math.floor((e-this.left)/this.x.base);this.x.value=this.x.row+this.x.min}if(o>=0&&o<this.cols){this.y.col=this.y.max-this.y.min-Math.floor((t-this.top)/this.y.base);this.y.value=this.y.col+this.y.min}(n!=this.x.value||r!=this.y.value)&&i.trigger("change")},setCoords:function(e,t){var n=this.x.value,r=this.y.value;this.x.value=e;this.x.row=this.x.value-this.x.min;this.y.value=t;this.y.col=this.y.value-this.y.min;(n!=this.x.value||r!=this.y.value)&&i.trigger("change")},startDrag:function(){i.on("mousemove",function(e){r.setCoordsFromOffset(e.pageX,e.pageY)})},startTouchDrag:function(){i.on("touchmove",function(e){e=e.originalEvent;var t=e.targetTouches[0];r.setCoordsFromOffset(t.pageX,t.pageY);e.preventDefault()})},stopDrag:function(){i.off("mousemove touchmove");i.trigger("release")}};r.rows=r.x.max-r.x.min+1;r.x.base=r.width/r.rows;r.x.value<r.x.min?r.x.value=r.x.min:r.x.value>r.x.max&&(r.x.value=r.x.max);r.cols=r.y.max-r.y.min+1;r.y.base=r.height/r.cols;r.y.value<r.y.min?r.y.value=r.y.min:r.y.value>r.y.max&&(r.y.value=r.y.max);r.x.initValue=r.x.value;r.y.initValue=r.y.value;r.setCoords(r.x.value,r.y.value);r.beacon.position();i.on("mousedown",function(e){r.setCoordsFromOffset(e.pageX,e.pageY);r.startDrag()}).on("touchstart",function(e){e=e.originalEvent;if(e.targetTouches.length==1){var t=e.targetTouches[0];r.setCoordsFromOffset(t.pageX,t.pageY);r.startTouchDrag()}}).on("change",function(){r.beacon.position()});e(document).on("mouseup touchend",function(t){e(t.target)[0]===n[0]&&r.stopDrag()})}})},value:function(){return{x:r.x.value,y:r.y.value}},set:function(e){r.setCoords(e.x,e.y)},reset:function(){r.setCoords(r.x.initValue,r.y.initValue)}};e.fn.inputGrid=function(t){if(i[t])return i[t].apply(this,Array.prototype.slice.call(arguments,1));if(typeof t=="object"||!t)return i.init.apply(this,arguments);e.error("Method "+t+" does not exist on jQuery.inputGrid")}});